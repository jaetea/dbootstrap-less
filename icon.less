// :copyright: Copyright 2012 Martin Pengelly-Phillips
// :license: See LICENSE.txt.

// General
// -------------------

.dijitIcon:before{
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    display: inline-block;
    text-decoration: inherit;
}

.dijitNoIcon{
    display: none;
}


// Icons
// Backwards compatibility for those not using the newer style icon classes.
// For example: dijitIconCut instead of icon-cut
// -------------------

.dijitIconSave:before {
	&:extend(.glyphicon-save:before);
}
.dijitIconPrint:before {
    &:extend(.glyphicon-print:before);
}
.dijitIconCut:before {
    &:extend(.glyphicon-cut:before);
}
.dijitIconCopy:before {
    &:extend(.glyphicon-copy:before);
}
.dijitIconPaste:before {
    &:extend(.glyphicon-paste:before);
}
.dijitIconClear:before {
    // &:extend(.glyphicon-;
}
.dijitIconDelete:before {
    &:extend(.glyphicon-remove:before);
}
.dijitIconUndo:before {
    &:extend(.glyphicon-undo:before);
}
.dijitIconEdit:before {
    &:extend(.glyphicon-edit:before);
}
.dijitIconNewTask:before {
    // &:extend(.glyphicon-task);
}
.dijitIconEditTask:before {
    // &:extend(.glyphicon-;
}
.dijitIconEditProperty:before {
    // &:extend(.glyphicon-;
}
.dijitIconTask:before {
    &:extend(.glyphicon-tasks:before);
}
.dijitIconFilter:before {
    &:extend(.glyphicon-filter:before);
}
.dijitIconConfigure:before {
    &:extend(.glyphicon-cog:before);
}
.dijitIconSearch:before {
    &:extend(.glyphicon-search:before);
}
.dijitIconApplication:before {
    // &:extend(.glyphicon-;
}
.dijitIconBookmark:before {
    &:extend(.glyphicon-bookmark:before);
}
.dijitIconChart:before {
    &:extend(.glyphicon-bar-chart:before);
}
.dijitIconConnector:before {
    // &:extend(.glyphicon-;
}
.dijitIconDatabase:before {
    // &:extend(.glyphicon-;
}
.dijitIconDocuments:before {
    // &:extend(.glyphicon-;
}
.dijitIconMail:before {
    &:extend(.glyphicon-envelope:before);
}
.dijitLeaf:before {
    &:extend(.glyphicon-file:before);
}
.dijitIconFile:before {
    &:extend(.glyphicon-file:before);
}
.dijitIconFunction:before {
    // &:extend(.glyphicon-;
}
.dijitIconKey:before {
    &:extend(.glyphicon-key:before);
}
.dijitIconPackage:before {
    // &:extend(.glyphicon-;
}
.dijitIconSample:before {
    // &:extend(.glyphicon-;
}
.dijitIconTable:before {
    &:extend(.glyphicon-table:before);
}
.dijitIconUsers:before {
    &:extend(.glyphicon-group:before);
}
.dijitFolderClosed:before {
    &:extend(.glyphicon-folder-close:before);
}
.dijitIconFolderClosed:before {
    &:extend(.glyphicon-folder-close:before);
}
.dijitFolderOpened:before {
    &:extend(.glyphicon-folder-open:before);
}
.dijitIconFolderOpen:before {
    &:extend(.glyphicon-folder-open:before);
}
.dijitIconError:before {
    &:extend(.glyphicon-exclamation-sign:before);
}

// Editor
.dijitEditorIcon:before {
}

.dijitEditorIconSave:before {
    &:extend(.glyphicon-save:before);
}
.dijitEditorIconPrint:before {
    &:extend(.glyphicon-print:before);
}
.dijitEditorIconCut:before {
    &:extend(.glyphicon-cut:before);
}
.dijitEditorIconCopy:before {
    &:extend(.glyphicon-copy:before);
}
.dijitEditorIconPaste:before {
    &:extend(.glyphicon-paste:before);
}
.dijitEditorIconDelete:before {
    &:extend(.glyphicon-trash:before);
}
.dijitEditorIconCancel:before {
    &:extend(.glyphicon-ban-circle:before);
}
.dijitEditorIconUndo:before {
    &:extend(.glyphicon-undo:before);
}
.dijitEditorIconRedo:before {
    &:extend(.glyphicon-repeat:before);
}
.dijitEditorIconSelectAll:before {
    // &:extend(.glyphicon-;
}
.dijitEditorIconBold:before {
    &:extend(.glyphicon-bold:before);
}
.dijitEditorIconItalic:before {
    &:extend(.glyphicon-italic:before);
}
.dijitEditorIconUnderline:before {
    &:extend(.glyphicon-underline:before);
}
.dijitEditorIconStrikethrough:before {
    &:extend(.glyphicon-strikethrough:before);
}
.dijitEditorIconSuperscript:before {
    // &:extend(.icon;
}
.dijitEditorIconSubscript:before {
    // &:extend(.icon;
}
.dijitEditorIconJustifyCenter:before {
    &:extend(.glyphicon-align-center:before);
}
.dijitEditorIconJustifyFull:before {
    &:extend(.glyphicon-align-justify:before);
}
.dijitEditorIconJustifyLeft:before {
    &:extend(.glyphicon-align-left:before);
}
.dijitEditorIconJustifyRight:before {
    &:extend(.glyphicon-align-right:before);
}
.dijitEditorIconIndent:before {
    &:extend(.glyphicon-indent-right:before);
}
.dijitEditorIconOutdent:before {
    &:extend(.glyphicon-indent-left:before);
}
.dijitEditorIconListBulletIndent:before {
    &:extend(.glyphicon-list-ul:before);
}
.dijitEditorIconListBulletOutdent:before {
    &:extend(.glyphicon-list-ul:before);
}
.dijitEditorIconListNumIndent:before {
    &:extend(.glyphicon-list-ol:before);
}
.dijitEditorIconListNumOutdent:before {
    &:extend(.glyphicon-list-ol:before);
}
.dijitEditorIconTabIndent:before {
    // &:extend(.icon;
}
.dijitEditorIconLeftToRight:before {
    // &:extend(.icon;
}
.dijitEditorIconRightToLeft,
.dijitEditorIconToggleDir:before {
}
.dijitEditorIconBackColor:before {
    // &:extend(.icon;
}
.dijitEditorIconForeColor:before {
    // &:extend(.icon;
}
.dijitEditorIconHiliteColor:before {
    // &:extend(.icon;
}
.dijitEditorIconNewPage:before {
    &:extend(.glyphicon-file:before);
}
.dijitEditorIconInsertImage:before {
    &:extend(.glyphicon-picture:before);
}
.dijitEditorIconInsertTable:before {
    &:extend(.glyphicon-table:before);
}
.dijitEditorIconSpace:before {
    // &:extend(.icon;
}
.dijitEditorIconInsertHorizontalRule:before {
    // &:extend(.icon;
}
.dijitEditorIconInsertOrderedList:before {
    &:extend(.glyphicon-list-ol:before);
}
.dijitEditorIconInsertUnorderedList:before {
    &:extend(.glyphicon-list-ul:before);
}
.dijitEditorIconCreateLink:before {
    &:extend(.glyphicon-link:before);
}
.dijitEditorIconUnlink:before {
    &:extend(.glyphicon-link:before);
}
.dijitEditorIconViewSource:before {
    // &:extend(.icon;
}
.dijitEditorIconRemoveFormat:before {
    // &:extend(.icon;
}
.dijitEditorIconFullScreen:before {
    &:extend(.glyphicon-fullscreen:before);
}
.dijitEditorIconWikiword:before {
    // &:extend(.icon;
}
